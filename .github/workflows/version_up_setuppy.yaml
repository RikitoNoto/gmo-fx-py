name: setup.pyのバージョンアップ

on:
  pull_request:
    branches:
      - main
      - develop
    types:
      - labeled
      - unlabeled


jobs:
  version_up:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 前回のリリースタグ取得
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "pre_tag=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_OUTPUT

      # バージョン番号のインクリメント
      - name: Increment version
        id: inc_ver
        # 設定されているタグをもとにバージョンを上げる
        run: |
          pre_version=${{ steps.pre_tag.outputs.pre_tag }}

          # 現在のバージョン番号を分割して各部分を取得
          IFS='.' read -r major minor patch <<< "${pre_version#v}"

          # プルリクエストに付与されたラベルに応じてバージョンをインクリメント
          if [[ ${{ github.event.pull_request.labels[*] }} == *"release_major"* ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ ${{ github.event.pull_request.labels[*] }} == *"release_minor"* ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ ${{ github.event.pull_request.labels[*] }} == *"release_patch"* ]]; then
            patch=$((patch + 1))
          fi

          # 新しいバージョン番号の作成
          new_version="v$major.$minor.$patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $$GITHUB_OUTPUT

      # version更新が必要か判定
      - name: Update setup.py with new version
        id: update_setuppy
        run: |
          current_version=$(grep -Po '(?<=VERSION=\")[0-9]+\.[0-9]+\.[0-9]+' setup.py)
          if [ "$current_version" == "${{ steps.inc_ver.outputs.new_version }}" ]; then
            echo "Version is already up-to-date in setup.py. Skipping commit."
            echo "skip_commit=true" >> $GITHUB_OUTPUT
          else
            sed -i "s/VERSION='$current_version'/VERSION='${{ steps.inc_ver.outputs.new_version }}'/" setup.py
            echo "skip_commit=false" >> $GITHUB_OUTPUT
          fi

      # 変更をコミットしてプッシュ
      - name: Commit and push changes
        if: !steps.update_setuppy.outputs.skip_commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add setup.py
          git commit -m "Version up to $new_version"
          git push origin ${{ github.head_ref }}
